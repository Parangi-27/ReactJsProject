{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJsProject\\\\client\\\\src\\\\component\\\\Notification\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ToastContainer, toast, Flip } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = props => {\n  _s();\n  const success = text => {\n    toast.success(text, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\"\n    });\n  };\n  const error = text => {\n    toast.error(text, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      transition: Flip,\n      progress: undefined,\n      theme: \"light\"\n    });\n  };\n  const promise = () => {\n    toast.promise(props.pro, {\n      pending: \"pending\",\n      success: \"success\",\n      error: \"rejected\"\n    }, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      transition: Flip,\n      progress: undefined,\n      theme: \"light\"\n    });\n  };\n  useEffect(() => {\n    getnotify();\n    console.log('i fire once');\n  }, []);\n  const getnotify = function () {\n    if (props.success) success(props.text);\n    if (props.promise) promise();\n    if (props.error) error(props.text);\n  };\n  localStorage.setItem(\"bool\", false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","ToastContainer","toast","Flip","useEffect","Notification","props","success","text","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","transition","promise","pro","pending","getnotify","console","log","localStorage","setItem"],"sources":["E:/ReactJsProject/client/src/component/Notification/index.js"],"sourcesContent":["import React from 'react';\r\nimport { ToastContainer, toast, Flip } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useEffect } from 'react';\r\n\r\nconst Notification = (props) => {\r\n  \r\n    const success=(text)=>{toast.success(text\r\n    ,{position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",});}\r\n    const error=(text)=>{toast.error(text\r\n        ,{position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        transition:Flip,\r\n        progress: undefined,\r\n        theme: \"light\",});}\r\n        const promise=()=>{toast.promise(props.pro,{\r\n       pending:\"pending\",\r\n        success:\"success\",\r\n        error:\"rejected\"\r\n        },{position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            transition:Flip,\r\n            progress: undefined,\r\n            theme: \"light\",});}\r\n\r\n            useEffect(() => {\r\n              getnotify();\r\n              console.log('i fire once');\r\n            },[]);\r\n\r\n          const getnotify= function () {\r\n             \r\n            if(props.success)\r\n             success(props.text);\r\n                \r\n            if(props.promise)\r\n            promise();   \r\n            if(props.error)\r\n             error(props.text);\r\n          }\r\n           \r\nlocalStorage.setItem(\"bool\",false);\r\n  return (\r\n    <div>\r\n          <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,KAAK,EAAEC,IAAI,QAAQ,gBAAgB;AAE5D,OAAO,uCAAuC;AAC9C,SAASC,SAAS,QAAQ,OAAO;AAAC;AAElC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAE5B,MAAMC,OAAO,GAAEC,IAAI,IAAG;IAACN,KAAK,CAACK,OAAO,CAACC,IAAI,EACxC;MAACC,QAAQ,EAAE,WAAW;MACvBC,SAAS,EAAE,IAAI;MACfC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAEC,SAAS;MACnBC,KAAK,EAAE;IAAQ,CAAC,CAAC;EAAC,CAAC;EACnB,MAAMC,KAAK,GAAEV,IAAI,IAAG;IAACN,KAAK,CAACgB,KAAK,CAACV,IAAI,EAChC;MAACC,QAAQ,EAAE,WAAW;MACvBC,SAAS,EAAE,IAAI;MACfC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfK,UAAU,EAAChB,IAAI;MACfY,QAAQ,EAAEC,SAAS;MACnBC,KAAK,EAAE;IAAQ,CAAC,CAAC;EAAC,CAAC;EACnB,MAAMG,OAAO,GAAC,MAAI;IAAClB,KAAK,CAACkB,OAAO,CAACd,KAAK,CAACe,GAAG,EAAC;MAC5CC,OAAO,EAAC,SAAS;MAChBf,OAAO,EAAC,SAAS;MACjBW,KAAK,EAAC;IACN,CAAC,EAAC;MAACT,QAAQ,EAAE,WAAW;MACpBC,SAAS,EAAE,IAAI;MACfC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfK,UAAU,EAAChB,IAAI;MACfY,QAAQ,EAAEC,SAAS;MACnBC,KAAK,EAAE;IAAQ,CAAC,CAAC;EAAC,CAAC;EAEnBb,SAAS,CAAC,MAAM;IACdmB,SAAS,EAAE;IACXC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B,CAAC,EAAC,EAAE,CAAC;EAEP,MAAMF,SAAS,GAAE,YAAY;IAE3B,IAAGjB,KAAK,CAACC,OAAO,EACfA,OAAO,CAACD,KAAK,CAACE,IAAI,CAAC;IAEpB,IAAGF,KAAK,CAACc,OAAO,EAChBA,OAAO,EAAE;IACT,IAAGd,KAAK,CAACY,KAAK,EACbA,KAAK,CAACZ,KAAK,CAACE,IAAI,CAAC;EACpB,CAAC;EAEXkB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAC,KAAK,CAAC;EAChC,oBACE;IAAA,uBACM,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAClB;AAEV,CAAC;AAAA,GAzDKtB,YAAY;AAAA,KAAZA,YAAY;AA2DlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}