{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJsProject\\\\client\\\\src\\\\component\\\\list\\\\DraggableList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './draggable-list.css';\nimport DraggableListItem from './DraggableListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableList = props => {\n  _s();\n  //console.log(props.data)\n  const [data, setdata] = useState({\n    g: []\n  });\n\n  // setdata({g:props.data})\n  //console.log(data)\n  const [dragStartIndex, setdragStartIndex] = useState(null);\n\n  // get index of draged item\n  const onDragStart = index => setdragStartIndex(index);\n\n  // update list when item dropped\n  const onDrop = dropIndex => {\n    // get draged item\n    const dragItem = data.g[dragStartIndex];\n\n    // delete draged item in list\n    let list = [...data];\n    list.splice(dragStartIndex, 1);\n\n    // update list\n    if (dragStartIndex < dropIndex) {\n      setdata([...list.slice(0, dropIndex - 1), dragItem, ...list.slice(dropIndex - 1, list.length)]);\n    } else {\n      setdata([...list.slice(0, dropIndex), dragItem, ...list.slice(dropIndex, list.length)]);\n    }\n  };\n  useEffect(() => {\n    const time = setInterval(() => {\n      setdata({\n        data: props.data\n      });\n    }, 1000);\n    return () => {\n      clearInterval(time);\n    };\n\n    //console.log(\"fecthingdata\");\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"draggable-list\",\n    children: [data.g.map((item, index) => /*#__PURE__*/_jsxDEV(DraggableListItem, {\n      index: index,\n      onDragStart: index => onDragStart(index),\n      onDrop: index => onDrop(index),\n      children: props.renderItemContent(item)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(DraggableListItem, {\n      index: data.g.length,\n      draggale: false,\n      onDrop: index => onDrop(index)\n    }, data.g.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(DraggableList, \"1OSk31n3jFY6lmNU0UA8gSWPsHo=\");\n_c = DraggableList;\nDraggableList.propTypes = {\n  data: PropTypes.array,\n  renderItemContent: PropTypes.func\n};\nexport default DraggableList;\nvar _c;\n$RefreshReg$(_c, \"DraggableList\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","DraggableListItem","DraggableList","props","data","setdata","g","dragStartIndex","setdragStartIndex","onDragStart","index","onDrop","dropIndex","dragItem","list","splice","slice","length","time","setInterval","clearInterval","map","item","renderItemContent","propTypes","array","func"],"sources":["E:/ReactJsProject/client/src/component/list/DraggableList.jsx"],"sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './draggable-list.css'\r\n\r\nimport DraggableListItem from './DraggableListItem'\r\n\r\nconst DraggableList = props => {\r\n//console.log(props.data)\r\n    const [data, setdata] = useState({\r\n        g: []\r\n      });\r\n     \r\n // setdata({g:props.data})\r\n//console.log(data)\r\n    const [dragStartIndex, setdragStartIndex] = useState(null);\r\n\r\n    // get index of draged item\r\n    const onDragStart = (index) => setdragStartIndex(index)\r\n\r\n    // update list when item dropped\r\n    const onDrop = (dropIndex) => {\r\n        // get draged item\r\n        const dragItem = data.g[dragStartIndex]\r\n\r\n        // delete draged item in list\r\n        let list = [...data]\r\n        list.splice(dragStartIndex, 1)\r\n\r\n        // update list\r\n        if (dragStartIndex < dropIndex) {\r\n            setdata([\r\n                ...list.slice(0, dropIndex - 1),\r\n                dragItem,\r\n                ...list.slice(dropIndex - 1, list.length)\r\n            ])\r\n        } else {\r\n            setdata([\r\n                ...list.slice(0, dropIndex),\r\n                dragItem,\r\n                ...list.slice(dropIndex, list.length)\r\n            ])\r\n        }\r\n    }\r\n    useEffect(() => {\r\n\r\n     const time = setInterval(()=>{\r\n             setdata({data:props.data})\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(time);\r\n          };\r\n       \r\n               //console.log(\"fecthingdata\");\r\n      });\r\n    \r\n    return (\r\n        <ul className=\"draggable-list\">\r\n            {\r\n                data.g.map((item, index) => (\r\n                    <DraggableListItem\r\n                        key={index}\r\n                        index={index}\r\n                        onDragStart={(index) => onDragStart(index)}\r\n                        onDrop={(index) => onDrop(index)}\r\n                    >\r\n                        {\r\n                            props.renderItemContent(item)\r\n                        }\r\n                    </DraggableListItem>\r\n                ))\r\n            }\r\n            {/*\r\n                add last item so you can drag item to last position\r\n                last item dont need onDragStart because it can not be draged\r\n            */}\r\n            <DraggableListItem\r\n                key={data.g.length}\r\n                index={data.g.length}\r\n                draggale={false}\r\n                onDrop={(index) => onDrop(index)}\r\n            />\r\n        </ul>\r\n    )\r\n}\r\n\r\nDraggableList.propTypes = {\r\n    data: PropTypes.array,\r\n    renderItemContent: PropTypes.func\r\n}\r\n\r\nexport default DraggableList\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,sBAAsB;AAE7B,OAAOC,iBAAiB,MAAM,qBAAqB;AAAA;AAEnD,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAAA;EAC/B;EACI,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC7BQ,CAAC,EAAE;EACL,CAAC,CAAC;;EAEP;EACD;EACI,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMW,WAAW,GAAIC,KAAK,IAAKF,iBAAiB,CAACE,KAAK,CAAC;;EAEvD;EACA,MAAMC,MAAM,GAAIC,SAAS,IAAK;IAC1B;IACA,MAAMC,QAAQ,GAAGT,IAAI,CAACE,CAAC,CAACC,cAAc,CAAC;;IAEvC;IACA,IAAIO,IAAI,GAAG,CAAC,GAAGV,IAAI,CAAC;IACpBU,IAAI,CAACC,MAAM,CAACR,cAAc,EAAE,CAAC,CAAC;;IAE9B;IACA,IAAIA,cAAc,GAAGK,SAAS,EAAE;MAC5BP,OAAO,CAAC,CACJ,GAAGS,IAAI,CAACE,KAAK,CAAC,CAAC,EAAEJ,SAAS,GAAG,CAAC,CAAC,EAC/BC,QAAQ,EACR,GAAGC,IAAI,CAACE,KAAK,CAACJ,SAAS,GAAG,CAAC,EAAEE,IAAI,CAACG,MAAM,CAAC,CAC5C,CAAC;IACN,CAAC,MAAM;MACHZ,OAAO,CAAC,CACJ,GAAGS,IAAI,CAACE,KAAK,CAAC,CAAC,EAAEJ,SAAS,CAAC,EAC3BC,QAAQ,EACR,GAAGC,IAAI,CAACE,KAAK,CAACJ,SAAS,EAAEE,IAAI,CAACG,MAAM,CAAC,CACxC,CAAC;IACN;EACJ,CAAC;EACDlB,SAAS,CAAC,MAAM;IAEf,MAAMmB,IAAI,GAAGC,WAAW,CAAC,MAAI;MACrBd,OAAO,CAAC;QAACD,IAAI,EAACD,KAAK,CAACC;MAAI,CAAC,CAAC;IAC/B,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAM;MACTgB,aAAa,CAACF,IAAI,CAAC;IACrB,CAAC;;IAEI;EACT,CAAC,CAAC;;EAEJ,oBACI;IAAI,SAAS,EAAC,gBAAgB;IAAA,WAEtBd,IAAI,CAACE,CAAC,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEZ,KAAK,kBACnB,QAAC,iBAAiB;MAEd,KAAK,EAAEA,KAAM;MACb,WAAW,EAAGA,KAAK,IAAKD,WAAW,CAACC,KAAK,CAAE;MAC3C,MAAM,EAAGA,KAAK,IAAKC,MAAM,CAACD,KAAK,CAAE;MAAA,UAG7BP,KAAK,CAACoB,iBAAiB,CAACD,IAAI;IAAC,GAN5BZ,KAAK;MAAA;MAAA;MAAA;IAAA,QASjB,CAAC,eAMN,QAAC,iBAAiB;MAEd,KAAK,EAAEN,IAAI,CAACE,CAAC,CAACW,MAAO;MACrB,QAAQ,EAAE,KAAM;MAChB,MAAM,EAAGP,KAAK,IAAKC,MAAM,CAACD,KAAK;IAAE,GAH5BN,IAAI,CAACE,CAAC,CAACW,MAAM;MAAA;MAAA;MAAA;IAAA,QAIpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEb,CAAC;AAAA,GA7EKf,aAAa;AAAA,KAAbA,aAAa;AA+EnBA,aAAa,CAACsB,SAAS,GAAG;EACtBpB,IAAI,EAAEJ,SAAS,CAACyB,KAAK;EACrBF,iBAAiB,EAAEvB,SAAS,CAAC0B;AACjC,CAAC;AAED,eAAexB,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}