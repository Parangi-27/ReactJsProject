{"ast":null,"code":"var _jsxFileName = \"E:\\\\KhataBook\\\\ReactJsProject\\\\client\\\\src\\\\component\\\\list\\\\DraggableListItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableListItem = props => {\n  _s();\n  const itemRef = useRef(null);\n  const onDragStart = e => {\n    // remove default drag ghost\n    e.dataTransfer.effectedAllowed = 'move';\n    e.dataTransfer.setDragImage(e.target, 50000, 50000);\n\n    // custom drag ghost\n    let ghostNode = e.target.cloneNode(true);\n    ghostNode.style.position = \"absolute\";\n\n    // show ghost add mouse pointer position\n    ghostNode.style.top = e.pageY - e.target.offsetHeight / 2 + 'px';\n    ghostNode.style.left = e.pageX - e.target.offsetWidth / 2 + 'px';\n\n    // add width height to ghost node\n    ghostNode.style.height = e.target.offsetHeight + 'px';\n    ghostNode.style.width = e.target.offsetWidth + 'px';\n\n    // add some style\n    ghostNode.style.opacity = '0.8';\n    ghostNode.style.pointerEvents = 'none';\n\n    // add id\n    ghostNode.id = 'ghostNode';\n    document.body.prepend(ghostNode);\n\n    // identify selected item\n    itemRef.current.classList.add('dragstart');\n    if (props.onDragStart) {\n      props.onDragStart(props.index);\n    }\n  };\n\n  // event when dragging\n  const onDrag = e => {\n    // move ghost node with mouse\n    let ghostNode = document.querySelector('#ghostNode');\n    ghostNode.style.top = e.pageY - e.target.offsetHeight / 2 + 'px';\n    ghostNode.style.left = e.pageX - e.target.offsetWidth / 2 + 'px';\n  };\n\n  // event when drag end\n  const onDragEnd = () => {\n    // remove ghost node\n    document.querySelector('#ghostNode').remove();\n    // remove selected item style\n    itemRef.current.classList.remove('dragstart');\n  };\n\n  // event when drag over item\n  const onDragEnter = () => itemRef.current.classList.add('dragover');\n\n  // event when drag leave item\n  const onDragLeave = () => itemRef.current.classList.remove('dragover');\n\n  // add event for item can drop\n  const onDragOver = e => e.preventDefault();\n\n  // event when drop\n  const onDrop = () => {\n    itemRef.current.classList.remove('dragover');\n    props.onDrop(props.index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    ref: itemRef,\n    className: \"draggable-list__item\",\n    draggable: props.draggable !== undefined ? props.draggable : true,\n    onDragStart: onDragStart,\n    onDrag: onDrag,\n    onDragEnd: onDragEnd,\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDragOver: onDragOver,\n    onDrop: onDrop,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(DraggableListItem, \"DVlPgzQcmfbAd0fQJF7uFiPU1Ck=\");\n_c = DraggableListItem;\nDraggableListItem.propTypes = {\n  draggable: PropTypes.bool,\n  index: PropTypes.number,\n  onDragStart: PropTypes.func,\n  onDrop: PropTypes.func\n};\nexport default DraggableListItem;\nvar _c;\n$RefreshReg$(_c, \"DraggableListItem\");","map":{"version":3,"names":["React","useRef","PropTypes","DraggableListItem","props","itemRef","onDragStart","e","dataTransfer","effectedAllowed","setDragImage","target","ghostNode","cloneNode","style","position","top","pageY","offsetHeight","left","pageX","offsetWidth","height","width","opacity","pointerEvents","id","document","body","prepend","current","classList","add","index","onDrag","querySelector","onDragEnd","remove","onDragEnter","onDragLeave","onDragOver","preventDefault","onDrop","draggable","undefined","children","propTypes","bool","number","func"],"sources":["E:/KhataBook/ReactJsProject/client/src/component/list/DraggableListItem.jsx"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst DraggableListItem = props => {\r\n\r\n    const itemRef = useRef(null)\r\n\r\n    const onDragStart = (e) => {\r\n        \r\n        // remove default drag ghost\r\n        e.dataTransfer.effectedAllowed = 'move'\r\n        e.dataTransfer.setDragImage(e.target, 50000, 50000)\r\n\r\n        // custom drag ghost\r\n        let ghostNode = e.target.cloneNode(true)\r\n\r\n        ghostNode.style.position = \"absolute\"\r\n\r\n        // show ghost add mouse pointer position\r\n        ghostNode.style.top = (e.pageY - e.target.offsetHeight /2) + 'px'\r\n        ghostNode.style.left = (e.pageX - e.target.offsetWidth /2) + 'px'\r\n\r\n        // add width height to ghost node\r\n        ghostNode.style.height = e.target.offsetHeight + 'px'\r\n        ghostNode.style.width = e.target.offsetWidth + 'px'\r\n\r\n        // add some style\r\n        ghostNode.style.opacity = '0.8'\r\n        ghostNode.style.pointerEvents = 'none'\r\n\r\n        // add id\r\n        ghostNode.id = 'ghostNode'\r\n\r\n        document.body.prepend(ghostNode)\r\n\r\n        // identify selected item\r\n        itemRef.current.classList.add('dragstart')\r\n\r\n        if (props.onDragStart) {\r\n            props.onDragStart(props.index)\r\n        }\r\n    }\r\n\r\n    // event when dragging\r\n    const onDrag = (e) => {\r\n        // move ghost node with mouse\r\n        let ghostNode = document.querySelector('#ghostNode')\r\n        ghostNode.style.top = (e.pageY - e.target.offsetHeight /2) + 'px'\r\n        ghostNode.style.left = (e.pageX - e.target.offsetWidth /2) + 'px'\r\n    }\r\n\r\n    // event when drag end\r\n    const onDragEnd = () => {\r\n        // remove ghost node\r\n        document.querySelector('#ghostNode').remove()\r\n        // remove selected item style\r\n        itemRef.current.classList.remove('dragstart')\r\n    }\r\n\r\n    // event when drag over item\r\n    const onDragEnter = () => itemRef.current.classList.add('dragover')\r\n\r\n    // event when drag leave item\r\n    const onDragLeave = () => itemRef.current.classList.remove('dragover')\r\n\r\n    // add event for item can drop\r\n    const onDragOver = (e) => e.preventDefault()\r\n\r\n    // event when drop\r\n    const onDrop = () => {\r\n        itemRef.current.classList.remove('dragover')\r\n        props.onDrop(props.index)\r\n    }\r\n\r\n    return (\r\n        <li\r\n            ref={itemRef}\r\n            className=\"draggable-list__item\"\r\n            draggable={props.draggable !== undefined ? props.draggable : true}\r\n            onDragStart={onDragStart}\r\n            onDrag={onDrag}\r\n            onDragEnd={onDragEnd}\r\n            onDragEnter={onDragEnter}\r\n            onDragLeave={onDragLeave}\r\n            onDragOver={onDragOver}\r\n            onDrop={onDrop}\r\n        >\r\n            {props.children}\r\n        </li>\r\n    )\r\n}\r\n\r\nDraggableListItem.propTypes = {\r\n    draggable: PropTypes.bool,\r\n    index: PropTypes.number,\r\n    onDragStart: PropTypes.func,\r\n    onDrop: PropTypes.func\r\n}\r\n\r\nexport default DraggableListItem\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}