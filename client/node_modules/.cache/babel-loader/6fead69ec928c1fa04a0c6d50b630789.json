{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJsProject\\\\client\\\\src\\\\component\\\\LineChart\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from \"./styles.module.css\";\nimport \"chart.js/auto\"; // ADD THIS\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LineChart() {\n  _s();\n  const ref = useRef();\n  const [value, setvalue] = useState([{\n    g: []\n  }]);\n  useEffect(() => {\n    const fetchdata = async () => {\n      try {\n        const resu = await fetch(\"register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({})\n        });\n        const res = await resu.json();\n        setvalue({\n          g: res\n        });\n        //  console.log(post);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchdata();\n    //const f=res.json();\n    // setPost([...post,{[res.data.name]}]);\n    // console.log(res.data);\n    // console.log(post);\n\n    // let s = fetchcurruser();\n    // console.log(s);\n  }, []);\n  const creditamount = [value.g[0].camount];\n  const data = {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"],\n    datasets: [{\n      label: \"Sales for 2020 (M)\",\n      data: [3, 2, 2, 1, 5],\n      borderColor: ['blue'],\n      backgroundColor: ['black'],\n      pointBackgroundColor: ['red'],\n      pointBorderColor: ['violet']\n    }],\n    options: {\n      animations: {\n        tension: {\n          duration: 1000,\n          easing: 'linear',\n          from: 1,\n          to: 0,\n          loop: true\n        }\n      },\n      scales: {\n        y: {\n          // defining min and max so hiding the dataset does not change scale range\n          min: 0,\n          max: 100\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: ref,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LineChart, \"th46ghgvOzlHRlzr48wrWWXy2RM=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Line","styles","axios","LineChart","ref","value","setvalue","g","fetchdata","resu","fetch","method","headers","body","JSON","stringify","res","json","error","console","log","creditamount","camount","data","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","options","animations","tension","duration","easing","from","to","loop","scales","y","min","max"],"sources":["E:/ReactJsProject/client/src/component/LineChart/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useRef ,useEffect} from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styles from \"./styles.module.css\";\r\nimport \"chart.js/auto\"; // ADD THIS\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction LineChart() {\r\n  const ref = useRef();\r\nconst [value,setvalue]=useState([{\r\n  g:[]\r\n}])\r\n  useEffect(() => {\r\n    const fetchdata= async()=>{\r\n      try{\r\n        const resu = await fetch(\"register\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            \r\n          }),\r\n        });\r\n        const res = await resu.json();\r\n  \r\n      setvalue({ g: res });\r\n    //  console.log(post);\r\n  \r\n      }\r\n      catch(error)\r\n      {\r\n        console.log(error);\r\n      }\r\n    }\r\n     fetchdata();\r\n        //const f=res.json();\r\n        // setPost([...post,{[res.data.name]}]);\r\n        // console.log(res.data);\r\n        // console.log(post);\r\n\r\n        // let s = fetchcurruser();\r\n          // console.log(s);\r\n  },[]);\r\n  const creditamount=[value.g[0].camount]\r\n  const data = {\r\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"],\r\n    datasets: [\r\n      {\r\n        label: \"Sales for 2020 (M)\",\r\n        data: [3, 2, 2, 1, 5],\r\n        borderColor: ['blue'],\r\n        backgroundColor: ['black'],\r\n        pointBackgroundColor: ['red'],\r\n        pointBorderColor: ['violet']\r\n      },\r\n    ],\r\n    options: {\r\n      animations: {\r\n        tension: {\r\n          duration: 1000,\r\n          easing: 'linear',\r\n          from: 1,\r\n          to: 0,\r\n          loop: true\r\n        }\r\n      },\r\n      scales: {\r\n        y: { // defining min and max so hiding the dataset does not change scale range\r\n          min: 0,\r\n          max: 100\r\n        }\r\n      }\r\n    }\r\n};\r\n  \r\n  return (\r\n    <>\r\n      <Line ref={ref} data={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,eAAe,CAAC,CAAC;AACxB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAG1B,SAASC,SAAS,GAAG;EAAA;EACnB,MAAMC,GAAG,GAAGN,MAAM,EAAE;EACtB,MAAM,CAACO,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,CAAC;IAC/BU,CAAC,EAAC;EACJ,CAAC,CAAC,CAAC;EACDR,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAE,YAAS;MACxB,IAAG;QACD,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,UAAU,EAAE;UACnCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,CAErB,CAAC;QACH,CAAC,CAAC;QACF,MAAMC,GAAG,GAAG,MAAMP,IAAI,CAACQ,IAAI,EAAE;QAE/BX,QAAQ,CAAC;UAAEC,CAAC,EAAES;QAAI,CAAC,CAAC;QACtB;MAEE,CAAC,CACD,OAAME,KAAK,EACX;QACEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACAV,SAAS,EAAE;IACR;IACA;IACA;IACA;;IAEA;IACE;EACR,CAAC,EAAC,EAAE,CAAC;EACL,MAAMa,YAAY,GAAC,CAAChB,KAAK,CAACE,CAAC,CAAC,CAAC,CAAC,CAACe,OAAO,CAAC;EACvC,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAC3CC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,oBAAoB;MAC3BH,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACrBI,WAAW,EAAE,CAAC,MAAM,CAAC;MACrBC,eAAe,EAAE,CAAC,OAAO,CAAC;MAC1BC,oBAAoB,EAAE,CAAC,KAAK,CAAC;MAC7BC,gBAAgB,EAAE,CAAC,QAAQ;IAC7B,CAAC,CACF;IACDC,OAAO,EAAE;MACPC,UAAU,EAAE;QACVC,OAAO,EAAE;UACPC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE,QAAQ;UAChBC,IAAI,EAAE,CAAC;UACPC,EAAE,EAAE,CAAC;UACLC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,CAAC,EAAE;UAAE;UACHC,GAAG,EAAE,CAAC;UACNC,GAAG,EAAE;QACP;MACF;IACF;EACJ,CAAC;EAEC,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,GAAG,EAAEtC,GAAI;MAAC,IAAI,EAAEmB;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG,iBAC7B;AAEP;AAAC,GA1EQpB,SAAS;AAAA,KAATA,SAAS;AA4ElB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}