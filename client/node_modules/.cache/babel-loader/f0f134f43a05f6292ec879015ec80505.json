{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJsProject\\\\client\\\\src\\\\component\\\\LineChart\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from \"./styles.module.css\";\nimport \"chart.js/auto\"; // ADD THIS\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LineChart() {\n  _s();\n  const [line, setline] = useState();\n  const ref = useRef();\n  const [value, setvalue] = useState([{\n    g: []\n  }]);\n  const [res, setres] = useState();\n  var r = localStorage.getItem(\"loginuser\");\n  r = JSON.parse(r);\n  r = r.name;\n  var data = {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"june\", \"july\", \"Aug\", \"Spet\", \"oct\", \"Nov\", \"Dec\"],\n    datasets: [{\n      label: \"Amount details for 2021 (M)\",\n      data: res,\n      borderColor: ['blue'],\n      backgroundColor: ['black'],\n      pointBackgroundColor: ['red'],\n      pointBorderColor: ['violet']\n    }],\n    options: {\n      animations: {\n        tension: {\n          duration: 1000,\n          easing: 'linear',\n          from: 1,\n          to: 0,\n          loop: true\n        }\n      },\n      scales: {\n        y: {\n          min: 0,\n          max: 100000\n        }\n      }\n    }\n  };\n  var result;\n  const fetchdata = async () => {\n    try {\n      const resu = await fetch(\"/graph\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          r\n        })\n      });\n      //  const res = await resu.json();\n      const re = await resu.json();\n      setvalue({\n        g: re\n      });\n      //console.log(value.g[0].graph[0]);\n      result = value.g[0].graph.map(a => parseInt(a.camount));\n      setres(result);\n      setline( /*#__PURE__*/_jsxDEV(Line, {\n        ref: ref,\n        className: styles.chart,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this));\n      //var creditamount=[value.g[0].graph[0].camount,value.g[0].graph[1].camount,value.g[0].graph[2].camount,value.g[0].graph[3].camount,value.g[0].graph[4].camount,value.g[0].graph[5].camount,value.g[0].graph[6].camount,value.g[0].graph[7].camount,value.g[0].graph[8].camount,value.g[0].graph[9].camount,value.g[0].graph[10].camount,value.g[0].graph[11].camount];\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  fetchdata();\n  useEffect(() => {\n    fetchdata();\n  }, [res]);\n\n  //console.log(data)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: ref,\n      className: styles.chart,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LineChart, \"d6XhgcfYNGWSUy1x0ozRx8N/FyE=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Line","styles","axios","LineChart","line","setline","ref","value","setvalue","g","res","setres","r","localStorage","getItem","JSON","parse","name","data","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","options","animations","tension","duration","easing","from","to","loop","scales","y","min","max","result","fetchdata","resu","fetch","method","headers","body","stringify","re","json","graph","map","a","parseInt","camount","chart","error","console","log"],"sources":["E:/ReactJsProject/client/src/component/LineChart/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useRef ,useEffect} from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styles from \"./styles.module.css\";\r\nimport \"chart.js/auto\"; // ADD THIS\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction LineChart() {\r\n  \r\n  const [line,setline]=useState();\r\n  const ref = useRef();\r\nconst [value,setvalue]=useState([{\r\n  g:[]\r\n}])\r\nconst [res,setres]=useState();\r\nvar r=localStorage.getItem(\"loginuser\");\r\n  r= JSON.parse(r);\r\n  r=r.name;\r\n  var data = {\r\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\",\"june\",\"july\",\"Aug\",\"Spet\",\"oct\",\"Nov\",\"Dec\"],\r\n    datasets: [\r\n      {\r\n        label: \"Amount details for 2021 (M)\",\r\n        data: res,\r\n        borderColor: ['blue'],\r\n        backgroundColor: ['black'],\r\n        pointBackgroundColor: ['red'],\r\n        pointBorderColor: ['violet']\r\n      },\r\n    ],\r\n    options: {\r\n      animations: {\r\n        tension: {\r\n          duration: 1000,\r\n          easing: 'linear',\r\n          from: 1,\r\n          to: 0,\r\n          loop: true\r\n        }\r\n      },\r\n      scales: {\r\n        y: { \r\n          min: 0,\r\n          max: 100000,\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\nvar result;\r\nconst fetchdata= async()=>{\r\n  try{\r\n    const resu = await fetch(\"/graph\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        r\r\n      }),\r\n    });\r\n  //  const res = await resu.json();\r\nconst re = await resu.json();\r\n\r\nsetvalue({ g: re });\r\n//console.log(value.g[0].graph[0]);\r\nresult = value.g[0].graph.map(a => parseInt(a.camount));\r\n  setres(result);\r\n  setline(<Line ref={ref} className={styles.chart} data={data} />);\r\n//var creditamount=[value.g[0].graph[0].camount,value.g[0].graph[1].camount,value.g[0].graph[2].camount,value.g[0].graph[3].camount,value.g[0].graph[4].camount,value.g[0].graph[5].camount,value.g[0].graph[6].camount,value.g[0].graph[7].camount,value.g[0].graph[8].camount,value.g[0].graph[9].camount,value.g[0].graph[10].camount,value.g[0].graph[11].camount];\r\n  }\r\n \r\n  catch(error)\r\n  {\r\n    console.log(error);\r\n  }\r\n}\r\nfetchdata()\r\n  useEffect(() => {\r\n     fetchdata();\r\n  },[res]);\r\n\r\n //console.log(data)\r\n  return (\r\n    <>\r\n\r\n      <Line ref={ref} className={styles.chart} data={data} />\r\n      {/* <Line ref={ref} className={styles.chart} data={data} /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}