{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJsProject\\\\client\\\\src\\\\component\\\\list\\\\DraggableList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './draggable-list.css';\nimport DraggableListItem from './DraggableListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableList = props => {\n  _s();\n  //console.log(props.data)\n  const [data, setdata] = useState({\n    g: []\n  });\n\n  // setdata({g:props.data})\n  //console.log(data)\n  const [dragStartIndex, setdragStartIndex] = useState(null);\n\n  // get index of draged item\n  const onDragStart = index => setdragStartIndex(index);\n\n  // update list when item dropped\n  const onDrop = dropIndex => {\n    // get draged item\n    const dragItem = data.g[dragStartIndex];\n\n    // delete draged item in list\n    let list = [...data];\n    list.splice(dragStartIndex, 1);\n\n    // update list\n    if (dragStartIndex < dropIndex) {\n      setdata([...list.slice(0, dropIndex - 1), dragItem, ...list.slice(dropIndex - 1, list.length)]);\n    } else {\n      setdata([...list.slice(0, dropIndex), dragItem, ...list.slice(dropIndex, list.length)]);\n    }\n  };\n  useEffect(() => {\n    setdata({\n      g: props.data\n    });\n    //console.log(\"fecthingdata\");\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"draggable-list\",\n    children: [data.g.map((item, index) => /*#__PURE__*/_jsxDEV(DraggableListItem, {\n      index: index,\n      onDragStart: index => onDragStart(index),\n      onDrop: index => onDrop(index),\n      children: props.renderItemContent(item)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(DraggableListItem, {\n      index: data.g.length,\n      draggale: false,\n      onDrop: index => onDrop(index)\n    }, data.g.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(DraggableList, \"k03PDJFUCC8Yzz6s8ku3MTAAuJU=\");\n_c = DraggableList;\nDraggableList.propTypes = {\n  data: PropTypes.array,\n  renderItemContent: PropTypes.func\n};\nexport default DraggableList;\nvar _c;\n$RefreshReg$(_c, \"DraggableList\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","DraggableListItem","DraggableList","props","data","setdata","g","dragStartIndex","setdragStartIndex","onDragStart","index","onDrop","dropIndex","dragItem","list","splice","slice","length","map","item","renderItemContent","propTypes","array","func"],"sources":["E:/ReactJsProject/client/src/component/list/DraggableList.jsx"],"sourcesContent":["import React, { useState,useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './draggable-list.css'\n\nimport DraggableListItem from './DraggableListItem'\n\nconst DraggableList = props => {\n//console.log(props.data)\n    const [data, setdata] = useState({\n        g: []\n      });\n     \n // setdata({g:props.data})\n//console.log(data)\n    const [dragStartIndex, setdragStartIndex] = useState(null);\n\n    // get index of draged item\n    const onDragStart = (index) => setdragStartIndex(index)\n\n    // update list when item dropped\n    const onDrop = (dropIndex) => {\n        // get draged item\n        const dragItem = data.g[dragStartIndex]\n\n        // delete draged item in list\n        let list = [...data]\n        list.splice(dragStartIndex, 1)\n\n        // update list\n        if (dragStartIndex < dropIndex) {\n            setdata([\n                ...list.slice(0, dropIndex - 1),\n                dragItem,\n                ...list.slice(dropIndex - 1, list.length)\n            ])\n        } else {\n            setdata([\n                ...list.slice(0, dropIndex),\n                dragItem,\n                ...list.slice(dropIndex, list.length)\n            ])\n        }\n    }\n    useEffect(() => {\n          setdata({g: props.data})\n               //console.log(\"fecthingdata\");\n      });\n    \n    return (\n        <ul className=\"draggable-list\">\n            {\n                data.g.map((item, index) => (\n                    <DraggableListItem\n                        key={index}\n                        index={index}\n                        onDragStart={(index) => onDragStart(index)}\n                        onDrop={(index) => onDrop(index)}\n                    >\n                        {\n                            props.renderItemContent(item)\n                        }\n                    </DraggableListItem>\n                ))\n            }\n            {/*\n                add last item so you can drag item to last position\n                last item dont need onDragStart because it can not be draged\n            */}\n            <DraggableListItem\n                key={data.g.length}\n                index={data.g.length}\n                draggale={false}\n                onDrop={(index) => onDrop(index)}\n            />\n        </ul>\n    )\n}\n\nDraggableList.propTypes = {\n    data: PropTypes.array,\n    renderItemContent: PropTypes.func\n}\n\nexport default DraggableList\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,sBAAsB;AAE7B,OAAOC,iBAAiB,MAAM,qBAAqB;AAAA;AAEnD,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAAA;EAC/B;EACI,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC7BQ,CAAC,EAAE;EACL,CAAC,CAAC;;EAEP;EACD;EACI,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMW,WAAW,GAAIC,KAAK,IAAKF,iBAAiB,CAACE,KAAK,CAAC;;EAEvD;EACA,MAAMC,MAAM,GAAIC,SAAS,IAAK;IAC1B;IACA,MAAMC,QAAQ,GAAGT,IAAI,CAACE,CAAC,CAACC,cAAc,CAAC;;IAEvC;IACA,IAAIO,IAAI,GAAG,CAAC,GAAGV,IAAI,CAAC;IACpBU,IAAI,CAACC,MAAM,CAACR,cAAc,EAAE,CAAC,CAAC;;IAE9B;IACA,IAAIA,cAAc,GAAGK,SAAS,EAAE;MAC5BP,OAAO,CAAC,CACJ,GAAGS,IAAI,CAACE,KAAK,CAAC,CAAC,EAAEJ,SAAS,GAAG,CAAC,CAAC,EAC/BC,QAAQ,EACR,GAAGC,IAAI,CAACE,KAAK,CAACJ,SAAS,GAAG,CAAC,EAAEE,IAAI,CAACG,MAAM,CAAC,CAC5C,CAAC;IACN,CAAC,MAAM;MACHZ,OAAO,CAAC,CACJ,GAAGS,IAAI,CAACE,KAAK,CAAC,CAAC,EAAEJ,SAAS,CAAC,EAC3BC,QAAQ,EACR,GAAGC,IAAI,CAACE,KAAK,CAACJ,SAAS,EAAEE,IAAI,CAACG,MAAM,CAAC,CACxC,CAAC;IACN;EACJ,CAAC;EACDlB,SAAS,CAAC,MAAM;IACVM,OAAO,CAAC;MAACC,CAAC,EAAEH,KAAK,CAACC;IAAI,CAAC,CAAC;IACnB;EACT,CAAC,CAAC;;EAEJ,oBACI;IAAI,SAAS,EAAC,gBAAgB;IAAA,WAEtBA,IAAI,CAACE,CAAC,CAACY,GAAG,CAAC,CAACC,IAAI,EAAET,KAAK,kBACnB,QAAC,iBAAiB;MAEd,KAAK,EAAEA,KAAM;MACb,WAAW,EAAGA,KAAK,IAAKD,WAAW,CAACC,KAAK,CAAE;MAC3C,MAAM,EAAGA,KAAK,IAAKC,MAAM,CAACD,KAAK,CAAE;MAAA,UAG7BP,KAAK,CAACiB,iBAAiB,CAACD,IAAI;IAAC,GAN5BT,KAAK;MAAA;MAAA;MAAA;IAAA,QASjB,CAAC,eAMN,QAAC,iBAAiB;MAEd,KAAK,EAAEN,IAAI,CAACE,CAAC,CAACW,MAAO;MACrB,QAAQ,EAAE,KAAM;MAChB,MAAM,EAAGP,KAAK,IAAKC,MAAM,CAACD,KAAK;IAAE,GAH5BN,IAAI,CAACE,CAAC,CAACW,MAAM;MAAA;MAAA;MAAA;IAAA,QAIpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEb,CAAC;AAAA,GAtEKf,aAAa;AAAA,KAAbA,aAAa;AAwEnBA,aAAa,CAACmB,SAAS,GAAG;EACtBjB,IAAI,EAAEJ,SAAS,CAACsB,KAAK;EACrBF,iBAAiB,EAAEpB,SAAS,CAACuB;AACjC,CAAC;AAED,eAAerB,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}