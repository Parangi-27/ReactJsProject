[{"E:\\KhataBook\\ReactJsProject\\client\\src\\index.js":"1","E:\\KhataBook\\ReactJsProject\\client\\src\\App.js":"2","E:\\KhataBook\\ReactJsProject\\client\\src\\reportWebVitals.js":"3","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Login\\index.js":"4","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Home\\index.js":"5","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\SignUp\\index.js":"6","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Button\\button.js":"7","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Credit\\index.js":"8","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Notification\\index.js":"9","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Navbar\\index.jsx":"10","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Footer\\index.jsx":"11","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Form\\index.js":"12"},{"size":511,"mtime":1667902852643,"results":"13","hashOfConfig":"14"},{"size":707,"mtime":1667578185788,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1666974924000,"results":"16","hashOfConfig":"14"},{"size":4196,"mtime":1667878418022,"results":"17","hashOfConfig":"14"},{"size":988,"mtime":1667902852597,"results":"18","hashOfConfig":"14"},{"size":4169,"mtime":1667846773883,"results":"19","hashOfConfig":"14"},{"size":443,"mtime":1666974924000,"results":"20","hashOfConfig":"14"},{"size":4305,"mtime":1667905190402,"results":"21","hashOfConfig":"14"},{"size":1670,"mtime":1667902852611,"results":"22","hashOfConfig":"14"},{"size":2927,"mtime":1667824138491,"results":"23","hashOfConfig":"14"},{"size":578,"mtime":1667113912000,"results":"24","hashOfConfig":"14"},{"size":5230,"mtime":1667911228353,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p4cj3e",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\KhataBook\\ReactJsProject\\client\\src\\index.js",[],[],"E:\\KhataBook\\ReactJsProject\\client\\src\\App.js",[],[],[],"E:\\KhataBook\\ReactJsProject\\client\\src\\reportWebVitals.js",[],[],"E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Login\\index.js",["66","67","68"],[],"import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport Button from \"../Button/button\";\r\nimport login from \"./login.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { animated, config, useSpring } from \"react-spring\";\r\nimport gif from \"../loaderlogo.gif\";\r\nimport Notification from \"../Notification\";\r\n//import { Link, useNavigate,NavLink } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const [Data, setData] = useState({ email: \"\", password: \"\" });\r\n  const [loading, setload] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    setData({ ...Data, [input.name]: input.value });\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { email, password } = Data;\r\n      const res = await fetch(\"/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n      //   const res= await fetch(\"/send-sms\",{\r\n      // \tmethod:\"GET\",\r\n      // \theaders:{\r\n      // \t\t\"Content-Type\":\"application/json\"\r\n      // \t},\r\n      // \t// body:JSON.stringify({\r\n\r\n      // \t// })\r\n      //   });\r\n      //\tconst res= await axios.post(\"/login\", Data);\r\n      //  res.json().then(data)=>{}\r\n      const y = await res.json();\r\n      localStorage.setItem(\"jtwtoken\", JSON.stringify(y.token));\r\n      localStorage.setItem(\"loginuser\", JSON.stringify(y.loginuser));\r\n      //  setLogin(\"jwtokenlocal\",y.token);\r\n\r\n      if (y.token && y) {\r\n        console.log(\"logged in\");\r\n        // navigate(\"/\");\r\n       \r\n        window.location.href = \"/\";\r\n      } else {\r\n        console.log(\"error in  respsone or token is not genearte properly\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const styleprops = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      transform: \"translate(-4000px,-1000px)\",\r\n      rotateZ: 0,\r\n    },\r\n    to: { opacity: 1, transform: \"translate(0,0)\", rotateZ: 360 },\r\n    delay: 4000,\r\n    config: {\r\n      duration: 1250,\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setload(false);\r\n    }, 4000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <center><img src={gif} alt=\"load\"></img></center>\r\n      ) : (\r\n        <animated.div style={styleprops} className={styles.box}>\r\n          <div className={styles.login_container}>\r\n            <img src={login} alt=\"img\" className={styles.image}></img>\r\n            <form style={styleprops} onSubmit={handleSubmit}>\r\n              <div className={styles.login_inner}>\r\n                <h1 className={styles.textlogin}>\r\n                  {\" \"}\r\n                  &lt;login <span className={styles.st}>/</span>&gt;\r\n                </h1>\r\n                <div className={styles.inputBox}>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    value={Data.email}\r\n                    required\r\n                    className={styles.input}\r\n                  />\r\n                  <span>Email</span>\r\n\r\n                  <br></br>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    value={Data.password}\r\n                    required\r\n                    className={styles.input}\r\n                  />\r\n                  <span>Password</span>\r\n                  <br></br>\r\n                  {error && <div className={styles.error_msg}>{error}</div>}\r\n\r\n                  <Button name=\"Login\" />\r\n                  <div className={styles.last}>\r\n                    <h3>Don't have an Account?</h3>\r\n                    <NavLink to=\"/signup\">\r\n                      <Button name=\"SignUp\" />\r\n                    </NavLink>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </animated.div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Home\\index.js",["69","70"],[],"E:\\KhataBook\\ReactJsProject\\client\\src\\component\\SignUp\\index.js",["71"],[],"import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport Button from \"../Button/button\";\r\nimport login from \"./login.png\";\r\nimport { useState } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { Link } from \"react-router-dom\";\r\nimport gif from \"../loaderlogo.gif\";\r\n\r\nconst SignUp = (props) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    phoneNo: \"\",\r\n  });\r\n  const [error, setError] = useState({\r\n    error1: \"\",\r\n    message: \"\",\r\n  });\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    setData({ ...data, [input.name]: input.value });\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password, confirmPassword, phoneNo } = data;\r\n    const res = await fetch(\"register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        phoneNo,\r\n      }),\r\n    });\r\n    const t = await res.json();\r\n    if (t) {\r\n      if (t.error || t.message) {\r\n        console.log(\"hello error\");\r\n        setError({ error1: t.error, message: t.message });\r\n      }\r\n      if (t.message) {\r\n        window.location.href = \"/login\";\r\n      }\r\n      //  console.log(error);\r\n    }\r\n  };\r\n\r\n  const styleprops = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      transform: \"translate(-4000px,-1000px)\",\r\n    },\r\n    opacity: 1,\r\n    transform: \"translate(0,0)\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <animated.div style={styleprops} className={styles.box}>\r\n        <div className={styles.signup_container}>\r\n          <img src={login} alt=\"img\" className={styles.image}></img>\r\n          <animated.form style={styleprops} onSubmit={handleSubmit}>\r\n            <h1 className={styles.textlogin}>\r\n              {\" \"}\r\n              &lt;signUp <span className={styles.st}>/</span>&gt;\r\n            </h1>\r\n            <div className={styles.inputBox}>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                value={data.email}\r\n                required\r\n                className={styles.input}\r\n              />\r\n              <span>Email</span>\r\n\t\t\t  <br />\r\n              <input\r\n                type=\"name\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                value={data.name}\r\n                required\r\n                className={styles.input}\r\n              />\r\n              <span>Name</span>\r\n\t\t\t  <br />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                value={data.password}\r\n                required\r\n                className={styles.input}\r\n              />\r\n              <span>Password</span>\r\n              <br></br>\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                onChange={handleChange}\r\n                value={data.confirmPassword}\r\n                required\r\n                className={styles.input}\r\n              />\r\n              <span>Confirm Password</span>\r\n              <br></br>\r\n              <input\r\n                type=\"phoneNo\"\r\n                name=\"phoneNo\"\r\n                onChange={handleChange}\r\n                value={data.phoneNo}\r\n                required\r\n                className={styles.input}\r\n                pattern=\"[0-9]{10}\"\r\n              />\r\n              <span>Contact No.</span>\r\n              <br></br>\r\n              {{ error } && (\r\n                <div className={styles.error_msg}>{error.error1}</div>\r\n              )}\r\n              <Button name=\"Sign Up\" />\r\n              <div className={styles.last}>\r\n                <h3>Already have an Account?</h3>\r\n                <Link to=\"/login\">\r\n                  <Button name=\"Login\" />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </animated.form>\r\n        </div>\r\n      </animated.div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Button\\button.js",[],[],"E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Credit\\index.js",["72","73","74","75","76","77","78","79"],[],"E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Notification\\index.js",["80"],[],"E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Navbar\\index.jsx",[],[],"E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Footer\\index.jsx",["81"],[],"import React from \"react\";\r\nimport \"./footer.css\";\r\nfunction Footer(){\r\n\r\n    return(\r\n            <>\r\n            <div class=\"wrapper\">\r\n                <center>\r\n                <small>&copy;2022 <strong>Manav & Parangi</strong>, All Rights Reserved</small>\r\n                <nav class=\"footer-nav\">\r\n                    <a href=\"#\">Back to Top</a>\r\n                    {/* <a href=\"#\">Terms of Use</a>\r\n                    <a href=\"#\">Privacy</a> */}\r\n                </nav>\r\n                </center>\r\n            </div>\r\n            </>\r\n    );\r\n}\r\n\r\nexport default Footer;","E:\\KhataBook\\ReactJsProject\\client\\src\\component\\Form\\index.js",["82","83","84","85","86","87","88","89"],[],{"ruleId":"90","severity":1,"message":"91","line":7,"column":20,"nodeType":"92","messageId":"93","endLine":7,"endColumn":26},{"ruleId":"90","severity":1,"message":"94","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":20},{"ruleId":"90","severity":1,"message":"95","line":15,"column":17,"nodeType":"92","messageId":"93","endLine":15,"endColumn":25},{"ruleId":"90","severity":1,"message":"96","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"97","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":14},{"ruleId":"90","severity":1,"message":"98","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":11},{"ruleId":"90","severity":1,"message":"99","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":17},{"ruleId":"90","severity":1,"message":"100","line":7,"column":20,"nodeType":"92","messageId":"93","endLine":7,"endColumn":29},{"ruleId":"90","severity":1,"message":"101","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":14},{"ruleId":"90","severity":1,"message":"102","line":24,"column":10,"nodeType":"92","messageId":"93","endLine":24,"endColumn":17},{"ruleId":"90","severity":1,"message":"103","line":24,"column":19,"nodeType":"92","messageId":"93","endLine":24,"endColumn":26},{"ruleId":"90","severity":1,"message":"104","line":26,"column":10,"nodeType":"92","messageId":"93","endLine":26,"endColumn":15},{"ruleId":"90","severity":1,"message":"95","line":26,"column":17,"nodeType":"92","messageId":"93","endLine":26,"endColumn":25},{"ruleId":"90","severity":1,"message":"105","line":43,"column":11,"nodeType":"92","messageId":"93","endLine":43,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":43,"column":15,"nodeType":"108","endLine":43,"endColumn":17,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":11,"column":21,"nodeType":"112","endLine":11,"endColumn":33},{"ruleId":"90","severity":1,"message":"98","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":11},{"ruleId":"90","severity":1,"message":"101","line":11,"column":8,"nodeType":"92","messageId":"93","endLine":11,"endColumn":14},{"ruleId":"90","severity":1,"message":"95","line":18,"column":17,"nodeType":"92","messageId":"93","endLine":18,"endColumn":25},{"ruleId":"90","severity":1,"message":"113","line":23,"column":10,"nodeType":"92","messageId":"93","endLine":23,"endColumn":17},{"ruleId":"90","severity":1,"message":"102","line":26,"column":10,"nodeType":"92","messageId":"93","endLine":26,"endColumn":17},{"ruleId":"90","severity":1,"message":"103","line":26,"column":19,"nodeType":"92","messageId":"93","endLine":26,"endColumn":26},{"ruleId":"90","severity":1,"message":"114","line":34,"column":9,"nodeType":"92","messageId":"93","endLine":34,"endColumn":23},{"ruleId":"90","severity":1,"message":"105","line":43,"column":11,"nodeType":"92","messageId":"93","endLine":43,"endColumn":14},"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'Notification' is defined but never used.","'setError' is assigned a value but never used.","'Link' is defined but never used.","'Footer' is defined but never used.","'gif' is defined but never used.","'NavLink' is defined but never used.","'useSpring' is defined but never used.","'Select' is defined but never used.","'loading' is assigned a value but never used.","'setload' is assigned a value but never used.","'error' is assigned a value but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getnotify'. Either include it or remove the dependency array.","ArrayExpression",["115"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loguser' is assigned a value but never used.","'handleTextarea' is assigned a value but never used.",{"desc":"116","fix":"117"},"Update the dependencies array to be: [getnotify]",{"range":"118","text":"119"},[1261,1263],"[getnotify]"]