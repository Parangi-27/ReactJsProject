[{"E:\\ReactJsProject\\client\\src\\index.js":"1","E:\\ReactJsProject\\client\\src\\reportWebVitals.js":"2","E:\\ReactJsProject\\client\\src\\App.js":"3","E:\\ReactJsProject\\client\\src\\component\\Home\\index.js":"4","E:\\ReactJsProject\\client\\src\\component\\Login\\index.js":"5","E:\\ReactJsProject\\client\\src\\component\\SignUp\\index.js":"6","E:\\ReactJsProject\\client\\src\\component\\Button\\button.js":"7"},{"size":552,"mtime":1666974922716,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1666974922719,"results":"10","hashOfConfig":"9"},{"size":618,"mtime":1667117435961,"results":"11","hashOfConfig":"9"},{"size":639,"mtime":1666974922710,"results":"12","hashOfConfig":"9"},{"size":2880,"mtime":1667118213125,"results":"13","hashOfConfig":"9"},{"size":3384,"mtime":1667132298078,"results":"14","hashOfConfig":"9"},{"size":443,"mtime":1666974922709,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"147opdn",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\ReactJsProject\\client\\src\\index.js",[],[],"E:\\ReactJsProject\\client\\src\\reportWebVitals.js",[],[],"E:\\ReactJsProject\\client\\src\\App.js",[],[],"E:\\ReactJsProject\\client\\src\\component\\Home\\index.js",[],[],"E:\\ReactJsProject\\client\\src\\component\\Login\\index.js",["38"],[],"import React from 'react';\r\nimport styles from \"./styles.module.css\";\r\nimport Button from '../Button/button';\r\nimport { NavLink} from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport {animated,useSpring } from 'react-spring';\r\n\r\n//import { Link, useNavigate,NavLink } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n\tconst [Data, setData] = useState({ email: \"\", password: \"\" });\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst handleChange = ({ currentTarget: input }) => {\r\n\t\tsetData({ ...Data, [input.name]: input.value });\r\n\t};\r\n\tconst handleSubmit= async(e) =>{\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tconst {email,password}=Data;\r\n\t\t\t  const res= await fetch(\"/login\",{\r\n\t\t\t\tmethod:\"POST\",\r\n\t\t\t\theaders:{\r\n\t\t\t\t\t\"Content-Type\":\"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody:JSON.stringify({\r\n\t\t\t            email,password\r\n\t\t\t\t})\r\n\t\t\t  });\r\n\t\t\t//   const res= await fetch(\"/send-sms\",{\r\n\t\t\t// \tmethod:\"GET\",\r\n\t\t\t// \theaders:{\r\n\t\t\t// \t\t\"Content-Type\":\"application/json\"\r\n\t\t\t// \t},\r\n\t\t\t// \t// body:JSON.stringify({\r\n\t\t\t\t\t   \r\n\t\t\t// \t// })\r\n\t\t\t//   });\r\n\t\t//\tconst res= await axios.post(\"/login\", Data);\r\n\t\t\t//  res.json().then(data)=>{}\r\n\t\t  const y= await res.json();\r\n\t\t//  localStorage.setItem(\"jtwtoken\",JSON.stringify(y.token));\r\n\t\t//  setLogin(\"jwtokenlocal\",y.token);\r\n\t\r\n\t\tif(y.token && y)\r\n\t\t{\r\n\t\t\tconsole.log(\"logged in\");\r\n\t\t\t// navigate(\"/\");\r\n\t\t\twindow.location.href=\"/\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t  console.log(\"error in  respsone or token is not genearte properly\");\r\n\t\t}\r\n\t\t\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\r\n\r\n\r\n\t};\r\n  \tconst styleprops = useSpring(\r\n\t{\r\n\tfrom:{\r\n\t\t\topacity:0,\r\n\t\t\ttransform:'translate(-4000px,-1000px)',\r\n\t},\r\n\topacity:1,\r\n\ttransform:'translate(0,0)',\r\n\t}\r\n\t)\r\n\r\n  return (\r\n\t\r\n     <div className={styles.login_container}>\r\n\t \r\n       <animated.div style={styleprops} className={styles.login_inner}>\r\n       <animated.form  style={styleprops} onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<h1 className={styles.textlogin}> Login</h1>\r\n\t\t\t\t\t <div className={styles.inputBox}>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tvalue={Data.email}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span>Email</span>\r\n\t\t\t\t\t    \r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tvalue={Data.password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span>Password</span>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t{error && <div className={styles.error_msg}>{error}</div>}\r\n\r\n\t\t\t\t\t\t<Button name=\"Login\" />\r\n\t\t\t\t\t\t<div className={styles.last}>\r\n\t\t\t\t\t\t<h3>Don't have an Account?</h3>\r\n\t\t\t\t\t\t\t<NavLink to=\"/signup\">\r\n\t\t\t\t\t\t\t\t<Button name=\"SignUp\" />\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</animated.form>\r\n       </animated.div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Login","E:\\ReactJsProject\\client\\src\\component\\SignUp\\index.js",[],[],"E:\\ReactJsProject\\client\\src\\component\\Button\\button.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":12,"column":16,"nodeType":"41","messageId":"42","endLine":12,"endColumn":24},"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar"]